p0=data$p0[i],p1=data$p0[i],
# bshape0=data$bshape0[i],bshape1=data$bshape0[i],
bshape0=2,bshape1=2,
ascale0_r=data$ascale0_r[i],ascale1_r=data$ascale0_r[i],
ascale0_nr=data$ascale0_nr[i],ascale1_nr=data$ascale0_nr[i],
ascale_cens=data$ascale_cens[i],
truncated=T,
tau=data$tau[i])) > z_alpha,na.rm = T)/nsim
data$Test_Reject_LR_size[i] <- sum(replicate(nsim,
fun_simtest_LR(n0=data$os_samplesize[i]/2,n1=data$os_samplesize[i]/2,
p0=data$p0[i],p1=data$p0[i],
# bshape0=data$bshape0[i],bshape1=data$bshape0[i],
bshape0=2,bshape1=2,
ascale0_r=data$ascale0_r[i],ascale1_r=data$ascale0_r[i],
ascale0_nr=data$ascale0_nr[i],ascale1_nr=data$ascale0_nr[i],
ascale_cens=data$ascale_cens[i],
truncated=T,
tau=data$tau[i])) > q_chi)/nsim
t1=Sys.time()-t0
cat(i, "\t", data$Test_Reject_size[i], "\t", t1, "\n", file="results_sim/LOG_size.txt", append=TRUE)
}
t1=Sys.time()-t0
cat(t1, "\n", file="results_sim/LOG_size.txt", append=TRUE)
(t1)
rm(i)
save.image("C:/Users/marta.bofill/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_inc.RData")
# write.xlsx(): append=FALSE when we are overwriting the sheet. Otherwise use append=TRUE
# write.xlsx(data, file="scenarios/complete_scenarios_results.xls", sheetName="complete_results_sim", append=FALSE, col.names=TRUE)
# write.xlsx(data, file="scenarios/complete_scenarios.xls", sheetName="complete_results_sim", append=TRUE, col.names=TRUE)
#####################################################################################
# simulation seed
set.seed(2231)
t0=Sys.time()
data$Test_Reject_size=0
data$Test_Reject_LR_size=0
for(i in 1:dim(data)[1]){
data$Test_Reject_size[i] <- sum(replicate(nsim,
fun_simtest(n0=data$os_samplesize[i]/2,n1=data$os_samplesize[i]/2,
p0=data$p0[i],p1=data$p0[i],
# bshape0=data$bshape0[i],bshape1=data$bshape0[i],
bshape0=2,bshape1=2,
ascale0_r=data$ascale0_r[i],ascale1_r=data$ascale0_r[i],
ascale0_nr=data$ascale0_nr[i],ascale1_nr=data$ascale0_nr[i],
ascale_cens=data$ascale_cens[i],
truncated=T,
tau=data$tau[i])) > z_alpha,na.rm = T)/nsim
data$Test_Reject_LR_size[i] <- sum(replicate(nsim,
fun_simtest_LR(n0=data$os_samplesize[i]/2,n1=data$os_samplesize[i]/2,
p0=data$p0[i],p1=data$p0[i],
# bshape0=data$bshape0[i],bshape1=data$bshape0[i],
bshape0=2,bshape1=2,
ascale0_r=data$ascale0_r[i],ascale1_r=data$ascale0_r[i],
ascale0_nr=data$ascale0_nr[i],ascale1_nr=data$ascale0_nr[i],
ascale_cens=data$ascale_cens[i],
truncated=T,
tau=data$tau[i])) > q_chi)/nsim
t1=Sys.time()-t0
cat(i, "\t", data$Test_Reject_size[i], "\t", t1, "\n", file="results_sim/LOG_size.txt", append=TRUE)
}
t1=Sys.time()-t0
cat(t1, "\n", file="results_sim/LOG_size.txt", append=TRUE)
(t1)
rm(i)
save.image("C:/Users/marta.bofill/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_inc.RData")
# write.xlsx(): append=FALSE when we are overwriting the sheet. Otherwise use append=TRUE
# write.xlsx(data, file="scenarios/complete_scenarios_results.xls", sheetName="complete_results_sim", append=FALSE, col.names=TRUE)
# write.xlsx(data, file="scenarios/complete_scenarios.xls", sheetName="complete_results_sim", append=TRUE, col.names=TRUE)
#####################################################################################
#####################################################################################
# DECREASING HAZARDS
#####################################################################################
# simulation seed
set.seed(9876)
t0=Sys.time()
data$Test_Reject=0
data$Test_Reject_LR=0
for(i in 1:dim(data)[1]){
# for(i in 1:1){
data$Test_Reject[i] <- sum(replicate(nsim,
fun_simtest(n0=data$os_samplesize[i]/2,n1=data$os_samplesize[i]/2,
p0=data$p0[i],p1=data$p1[i],
# bshape0=data$bshape0[i],bshape1=data$bshape1[i],
bshape0=0.5,bshape1=0.5,
ascale0_r=data$ascale0_r[i],ascale1_r=data$ascale1_r[i],
ascale0_nr=data$ascale0_nr[i],ascale1_nr=data$ascale1_nr[i],
ascale_cens=data$ascale_cens[i],
truncated=T,
tau=data$tau[i])) > z_alpha)/nsim
data$Test_Reject_LR[i] <- sum(replicate(nsim,
fun_simtest_LR(n0=data$os_samplesize[i]/2,n1=data$os_samplesize[i]/2,
p0=data$p0[i],p1=data$p1[i],
# bshape0=data$bshape0[i],bshape1=data$bshape1[i],
bshape0=0.5,bshape1=0.5,
ascale0_r=data$ascale0_r[i],ascale1_r=data$ascale1_r[i],
ascale0_nr=data$ascale0_nr[i],ascale1_nr=data$ascale1_nr[i],
ascale_cens=data$ascale_cens[i],
truncated=T,
tau=data$tau[i])) > q_chi)/nsim
t1=Sys.time()-t0
cat(i, "\t", data$Test_Reject[i], "\t", t1, "\n", file="results_sim/LOG_power.txt", append=TRUE)
}
t1=Sys.time()-t0
cat(t1, "\n", file="results_sim/LOG_power.txt", append=TRUE)
(t1)
rm(i)
save.image("C:/Users/marta.bofill/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_dec.RData")
#####################################################################################
# simulation seed
set.seed(1903)
t0=Sys.time()
data$Test_Reject_size=0
data$Test_Reject_LR_size=0
for(i in 1:dim(data)[1]){
data$Test_Reject_size[i] <- sum(replicate(nsim,
fun_simtest(n0=data$os_samplesize[i]/2,n1=data$os_samplesize[i]/2,
p0=data$p0[i],p1=data$p0[i],
# bshape0=data$bshape0[i],bshape1=data$bshape0[i],
bshape0=0.5,bshape1=0.5,
ascale0_r=data$ascale0_r[i],ascale1_r=data$ascale0_r[i],
ascale0_nr=data$ascale0_nr[i],ascale1_nr=data$ascale0_nr[i],
ascale_cens=data$ascale_cens[i],
truncated=T,
tau=data$tau[i])) > z_alpha,na.rm = T)/nsim
data$Test_Reject_LR_size[i] <- sum(replicate(nsim,
fun_simtest_LR(n0=data$os_samplesize[i]/2,n1=data$os_samplesize[i]/2,
p0=data$p0[i],p1=data$p0[i],
# bshape0=data$bshape0[i],bshape1=data$bshape0[i],
bshape0=0.5,bshape1=0.5,
ascale0_r=data$ascale0_r[i],ascale1_r=data$ascale0_r[i],
ascale0_nr=data$ascale0_nr[i],ascale1_nr=data$ascale0_nr[i],
ascale_cens=data$ascale_cens[i],
truncated=T,
tau=data$tau[i])) > q_chi)/nsim
t1=Sys.time()-t0
cat(i, "\t", data$Test_Reject_size[i], "\t", t1, "\n", file="results_sim/LOG_size.txt", append=TRUE)
}
t1=Sys.time()-t0
cat(t1, "\n", file="results_sim/LOG_size.txt", append=TRUE)
(t1)
rm(i)
save.image("C:/Users/marta.bofill/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_dec.RData")
# write.xlsx(): append=FALSE when we are overwriting the sheet. Otherwise use append=TRUE
# write.xlsx(data, file="scenarios/complete_scenarios_results.xls", sheetName="complete_results_sim", append=FALSE, col.names=TRUE)
# write.xlsx(data, file="scenarios/complete_scenarios.xls", sheetName="complete_results_sim", append=TRUE, col.names=TRUE)
#####################################################################################
View(data)
View(data)
rm(list = ls())
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim.RData")
rm(list = ls())
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim.RData")
library(ggplot2)
library(gridExtra)
library(ggpubr)
data$cases = 4
for(i in 1:dim(data)[1]){
if(data$Delta_r[i]==0 & data$Delta_nr[i]==0) data$cases[i]= 1
if(data$Delta_r[i]==0 & data$Delta_nr[i]!=0) data$cases[i]= 2
if(data$Delta_r[i]!=0 & data$Delta_nr[i]==0) data$cases[i]=3
}
data$cases = as.factor(data$cases)
summary(data$cases)
data$diff_power = data$Test_Reject - data$Test_Reject_LR
data$diff_alpha = data$Test_Reject_size - data$Test_Reject_LR_size
summary(data$os_samplesize)
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data$os_samplesize)
summary(data$os_effect)
############
# Boxplots alpha and power
windows(height = 14, width = 14)
p1 <- ggplot(data, aes(x=cases, y=Test_Reject,  color=cases)) +
geom_boxplot()  + labs(y = "Power RMST test", x ="Settings", color ="Settings")+ coord_cartesian(ylim = c(0.65, 1))#+ ylim(0.65, 0.9)
p2 <- ggplot(data, aes(x=cases, y=Test_Reject_LR,  color=cases)) +
geom_boxplot()  + labs(y = "Power logrank test", x ="Settings", color ="Settings") + coord_cartesian(ylim = c(0.65, 1))#+ ylim(0.65, 0.9)
diff_p12 <- ggplot(data, aes(x=cases, y=diff_power,  color=cases)) +
geom_boxplot()  + labs(y = "Difference Power (RMST - logrank) ", x ="Settings", color ="Settings") #+ coord_cartesian(ylim = c(-0.1, 0.1))
p3 <- ggplot(data, aes(x=cases, y=Test_Reject_size, color=cases)) +
geom_boxplot() + labs(y = "Significance level RMST test", x ="Settings", color ="Settings")  + coord_cartesian(ylim = c(0.035, 0.08)) # + ylim(0.035, 0.09)
p4 <- ggplot(data, aes(x=cases, y=Test_Reject_LR_size, color=cases)) +
geom_boxplot()+ labs(y = "Significance level logrank test", x ="Settings", color ="Settings") + coord_cartesian(ylim = c(0.035, 0.08)) # + ylim(0.035, 0.09)
diff_p34 <- ggplot(data, aes(x=cases, y=diff_alpha,  color=cases)) +
geom_boxplot()  + labs(y = "Difference Significance level (RMST - logrank )", x ="Settings", color ="Settings")+ coord_cartesian(ylim = c(-0.03, 0.03))
figure <- ggarrange(p1,p2,diff_p12,p3,p4,diff_p34, ncol=3, nrow=2, common.legend = TRUE, legend="bottom")
annotate_figure(figure,
top = text_grob("Power and Significance level",
# top = text_grob(expression(paste("Power and Significance level (", bshape^{(0)}, "=", bshape^{(1)}, ")")),
face = "bold", size = 14))
summary(data)
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_dec.RData")
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_dec.RData")
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data)
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_inc.RData")
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data)
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_dec.RData")
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data)
################################################################
################################################################
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_inc.RData")
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data)
################################################
################################################################
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_inc.RData")
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data)
rm(list = ls())
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim.RData")
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data)
summary(data)
rm(list = ls())
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim.RData")
summary(data)
rm(list = ls())
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim.RData")
library(ggplot2)
library(gridExtra)
library(ggpubr)
################################################################
################################################################
data$cases = 4
for(i in 1:dim(data)[1]){
if(data$Delta_r[i]==0 & data$Delta_nr[i]==0) data$cases[i]= 1
if(data$Delta_r[i]==0 & data$Delta_nr[i]!=0) data$cases[i]= 2
if(data$Delta_r[i]!=0 & data$Delta_nr[i]==0) data$cases[i]=3
}
data$cases = as.factor(data$cases)
summary(data$cases)
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data)
###########################################################
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_inc.RData")
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data)
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim_inc.RData")
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data)
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Sensitivity/results_sim/RESULTS_sim.RData")
library(ggplot2)
library(gridExtra)
library(ggpubr)
################################################################
################################################################
data$cases = 4
for(i in 1:dim(data)[1]){
if(data$Delta_r[i]==0 & data$Delta_nr[i]==0) data$cases[i]= 1
if(data$Delta_r[i]==0 & data$Delta_nr[i]!=0) data$cases[i]= 2
if(data$Delta_r[i]!=0 & data$Delta_nr[i]==0) data$cases[i]=3
}
data$cases = as.factor(data$cases)
summary(data$cases)
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data)
rm(list = ls())
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Simulations/results_sim/RESULTS_sim.RData")
library(ggplot2)
library(gridExtra)
library(ggpubr)
data$cases = 4
for(i in 1:dim(data)[1]){
if(data$Delta_r[i]==0 & data$Delta_nr[i]==0) data$cases[i]= 1
if(data$Delta_r[i]==0 & data$Delta_nr[i]!=0) data$cases[i]= 2
if(data$Delta_r[i]!=0 & data$Delta_nr[i]==0) data$cases[i]=3
}
data$cases = as.factor(data$cases)
summary(data$cases)
data$diff_power = data$Test_Reject - data$Test_Reject_LR
data$diff_alpha = data$Test_Reject_size - data$Test_Reject_LR_size
summary(data$os_samplesize)
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data$os_samplesize)
summary(data$os_effect)
############
# Boxplots alpha and power
windows(height = 14, width = 14)
p1 <- ggplot(data, aes(x=cases, y=Test_Reject,  color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1)) + labs(y = "Power RMST test", x ="Settings", color ="Settings")+ coord_cartesian(ylim = c(0.65, 1))#+ ylim(0.65, 0.9)
p2 <- ggplot(data, aes(x=cases, y=Test_Reject_LR,  color=cases)) +
geom_boxplot() +
# geom_point(color="grey50") +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1))
+ labs(y = "Power logrank test", x ="Settings", color ="Settings") + coord_cartesian(ylim = c(0.65, 1))#+ ylim(0.65, 0.9)
diff_p12 <- ggplot(data, aes(x=cases, y=diff_power,  color=cases)) +
geom_boxplot()  + labs(y = "Difference Power (RMST - logrank) ", x ="Settings", color ="Settings") #+ coord_cartesian(ylim = c(-0.1, 0.1))
p3 <- ggplot(data, aes(x=cases, y=Test_Reject_size, color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1)) + labs(y = "Significance level RMST test", x ="Settings", color ="Settings")  + coord_cartesian(ylim = c(0.035, 0.08)) # + ylim(0.035, 0.09)
p4 <- ggplot(data, aes(x=cases, y=Test_Reject_LR_size, color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1)) + labs(y = "Significance level logrank test", x ="Settings", color ="Settings") + coord_cartesian(ylim = c(0.035, 0.08)) # + ylim(0.035, 0.09)
diff_p34 <- ggplot(data, aes(x=cases, y=diff_alpha,  color=cases)) +
geom_boxplot()  + labs(y = "Difference Significance level (RMST - logrank )", x ="Settings", color ="Settings")+ coord_cartesian(ylim = c(-0.03, 0.03))
figure <- ggarrange(p1,p2,diff_p12,p3,p4,diff_p34, ncol=3, nrow=2, common.legend = TRUE, legend="bottom")
annotate_figure(figure,
top = text_grob("Power and Significance level",
# top = text_grob(expression(paste("Power and Significance level (", bshape^{(0)}, "=", bshape^{(1)}, ")")),
face = "bold", size = 14))
#
windows(height = 14, width = 12)
figure_mod <- ggarrange(p1,p2,p3,p4, ncol=2, nrow=2, common.legend = TRUE, legend="bottom")
annotate_figure(figure_mod,
top = text_grob("Power and Significance level",
# top = text_grob(expression(paste("Power and Significance level (", bshape^{(0)}, "=", bshape^{(1)}, ")")),
face = "bold", size = 14))
rm(list = ls())
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Simulations/results_sim/RESULTS_sim.RData")
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(hrbrthemes)
library(viridis)
data$cases = 4
for(i in 1:dim(data)[1]){
if(data$Delta_r[i]==0 & data$Delta_nr[i]==0) data$cases[i]= 1
if(data$Delta_r[i]==0 & data$Delta_nr[i]!=0) data$cases[i]= 2
if(data$Delta_r[i]!=0 & data$Delta_nr[i]==0) data$cases[i]=3
}
data$cases = as.factor(data$cases)
summary(data$cases)
data$diff_power = data$Test_Reject - data$Test_Reject_LR
data$diff_alpha = data$Test_Reject_size - data$Test_Reject_LR_size
summary(data$os_samplesize)
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data$os_samplesize)
summary(data$os_effect)
############
# Boxplots alpha and power
windows(height = 14, width = 14)
p1 <- ggplot(data, aes(x=cases, y=Test_Reject,  color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1)) + labs(y = "Power RMST test", x ="Settings", color ="Settings")+ coord_cartesian(ylim = c(0.65, 1))#+ ylim(0.65, 0.9)
p2 <- ggplot(data, aes(x=cases, y=Test_Reject_LR,  color=cases)) +
geom_boxplot() +
# geom_point(color="grey50") +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1))
+ labs(y = "Power logrank test", x ="Settings", color ="Settings") + coord_cartesian(ylim = c(0.65, 1))#+ ylim(0.65, 0.9)
diff_p12 <- ggplot(data, aes(x=cases, y=diff_power,  color=cases)) +
geom_boxplot()  + labs(y = "Difference Power (RMST - logrank) ", x ="Settings", color ="Settings") #+ coord_cartesian(ylim = c(-0.1, 0.1))
p3 <- ggplot(data, aes(x=cases, y=Test_Reject_size, color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1)) + labs(y = "Significance level RMST test", x ="Settings", color ="Settings")  + coord_cartesian(ylim = c(0.035, 0.08)) # + ylim(0.035, 0.09)
p4 <- ggplot(data, aes(x=cases, y=Test_Reject_LR_size, color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1)) + labs(y = "Significance level logrank test", x ="Settings", color ="Settings") + coord_cartesian(ylim = c(0.035, 0.08)) # + ylim(0.035, 0.09)
diff_p34 <- ggplot(data, aes(x=cases, y=diff_alpha,  color=cases)) +
geom_boxplot()  + labs(y = "Difference Significance level (RMST - logrank )", x ="Settings", color ="Settings")+ coord_cartesian(ylim = c(-0.03, 0.03))
figure <- ggarrange(p1,p2,diff_p12,p3,p4,diff_p34, ncol=3, nrow=2, common.legend = TRUE, legend="bottom")
annotate_figure(figure,
top = text_grob("Power and Significance level",
# top = text_grob(expression(paste("Power and Significance level (", bshape^{(0)}, "=", bshape^{(1)}, ")")),
face = "bold", size = 14))
#
windows(height = 14, width = 12)
figure_mod <- ggarrange(p1,p2,p3,p4, ncol=2, nrow=2, common.legend = TRUE, legend="bottom")
annotate_figure(figure_mod,
top = text_grob("Power and Significance level",
# top = text_grob(expression(paste("Power and Significance level (", bshape^{(0)}, "=", bshape^{(1)}, ")")),
face = "bold", size = 14))
rm(list = ls())
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Simulations/results_sim/RESULTS_sim.RData")
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(hrbrthemes)
library(viridis)
data$cases = 4
for(i in 1:dim(data)[1]){
if(data$Delta_r[i]==0 & data$Delta_nr[i]==0) data$cases[i]= 1
if(data$Delta_r[i]==0 & data$Delta_nr[i]!=0) data$cases[i]= 2
if(data$Delta_r[i]!=0 & data$Delta_nr[i]==0) data$cases[i]=3
}
data$cases = as.factor(data$cases)
summary(data$cases)
data$diff_power = data$Test_Reject - data$Test_Reject_LR
data$diff_alpha = data$Test_Reject_size - data$Test_Reject_LR_size
summary(data$os_samplesize)
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data$os_samplesize)
summary(data$os_effect)
############
# Boxplots alpha and power
windows(height = 14, width = 14)
p1 <- ggplot(data, aes(x=cases, y=Test_Reject,  color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1)) + labs(y = "Power RMST test", x ="Settings", color ="Settings")+ coord_cartesian(ylim = c(0.65, 1))#+ ylim(0.65, 0.9)
p2 <- ggplot(data, aes(x=cases, y=Test_Reject_LR,  color=cases)) +
geom_boxplot() + labs(y = "Power log-rank test", x ="Settings", color ="Settings")+ coord_cartesian(ylim = c(0.65, 1)) +
# geom_point(color="grey50") +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1))
+ labs(y = "Power log-rank test", x ="Settings", color ="Settings") + coord_cartesian(ylim = c(0.65, 1))#+ ylim(0.65, 0.9)
diff_p12 <- ggplot(data, aes(x=cases, y=diff_power,  color=cases)) +
geom_boxplot()  + labs(y = "Difference Power (RMST - log-rank) ", x ="Settings", color ="Settings") #+ coord_cartesian(ylim = c(-0.1, 0.1))
p3 <- ggplot(data, aes(x=cases, y=Test_Reject_size, color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1)) + labs(y = "Significance level RMST test", x ="Settings", color ="Settings")  + coord_cartesian(ylim = c(0.035, 0.08)) # + ylim(0.035, 0.09)
p4 <- ggplot(data, aes(x=cases, y=Test_Reject_LR_size, color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.8, alpha=1,position=position_jitter(width = 0.1)) + labs(y = "Significance level log-rank test", x ="Settings", color ="Settings") + coord_cartesian(ylim = c(0.035, 0.08)) # + ylim(0.035, 0.09)
diff_p34 <- ggplot(data, aes(x=cases, y=diff_alpha,  color=cases)) +
geom_boxplot()  + labs(y = "Difference Significance level (RMST - log-rank )", x ="Settings", color ="Settings")+ coord_cartesian(ylim = c(-0.03, 0.03))
figure <- ggarrange(p1,p2,diff_p12,p3,p4,diff_p34, ncol=3, nrow=2, common.legend = TRUE, legend="bottom")
annotate_figure(figure,
top = text_grob("Power and Significance level",
# top = text_grob(expression(paste("Power and Significance level (", bshape^{(0)}, "=", bshape^{(1)}, ")")),
face = "bold", size = 14))
#
windows(height = 14, width = 12)
figure_mod <- ggarrange(p1,p2,p3,p4, ncol=2, nrow=2, common.legend = TRUE, legend="bottom")
annotate_figure(figure_mod,
top = text_grob("Power and Significance level",
# top = text_grob(expression(paste("Power and Significance level (", bshape^{(0)}, "=", bshape^{(1)}, ")")),
face = "bold", size = 14))
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Additional-Simulations/results_sim/RESULTS_sim.RData")
summary(data)
rm(list = ls())
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Additional-Simulations/results_sim/RESULTS_sim.RData")
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(hrbrthemes)
library(viridis)
data$cases = 4
for(i in 1:dim(data)[1]){
if(data$Delta_r[i]==0 & data$Delta_nr[i]==0) data$cases[i]= 1
if(data$Delta_r[i]==0 & data$Delta_nr[i]!=0) data$cases[i]= 2
if(data$Delta_r[i]!=0 & data$Delta_nr[i]==0) data$cases[i]=3
}
data$cases = as.factor(data$cases)
summary(data$cases)
data$diff_power = data$Test_Reject - data$Test_Reject_LR
data$diff_alpha = data$Test_Reject_size - data$Test_Reject_LR_size
summary(data$os_samplesize)
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data$os_samplesize)
summary(data$os_effect)
############
# Boxplots alpha and power
windows(height = 14, width = 14)
p1 <- ggplot(data, aes(x=cases, y=Test_Reject,  color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.4, alpha=1)  + labs(y = "Power RMST test", x ="Settings", color ="Settings")+ coord_cartesian(ylim = c(0.65, 1))#+ ylim(0.65, 0.9)
p2 <- ggplot(data, aes(x=cases, y=Test_Reject_LR,  color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.4, alpha=1) + labs(y = "Power logrank test", x ="Settings", color ="Settings") + coord_cartesian(ylim = c(0.65, 1))#+ ylim(0.65, 0.9)
diff_p12 <- ggplot(data, aes(x=cases, y=diff_power,  color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.4, alpha=1) + labs(y = "Difference Power (RMST - logrank) ", x ="Settings", color ="Settings") #+ coord_cartesian(ylim = c(-0.1, 0.1))
p3 <- ggplot(data, aes(x=cases, y=Test_Reject_size, color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.4, alpha=1) + labs(y = "Significance level RMST test", x ="Settings", color ="Settings")  + coord_cartesian(ylim = c(0.035, 0.08)) # + ylim(0.035, 0.09)
p4 <- ggplot(data, aes(x=cases, y=Test_Reject_LR_size, color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.4, alpha=1)+ labs(y = "Significance level logrank test", x ="Settings", color ="Settings") + coord_cartesian(ylim = c(0.035, 0.08)) # + ylim(0.035, 0.09)
diff_p34 <- ggplot(data, aes(x=cases, y=diff_alpha,  color=cases)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="grey50", size=0.4, alpha=1) + labs(y = "Difference Significance level (RMST - logrank )", x ="Settings", color ="Settings")+ coord_cartesian(ylim = c(-0.03, 0.03))
figure <- ggarrange(p1,p2,diff_p12,p3,p4,diff_p34, ncol=3, nrow=2, common.legend = TRUE, legend="bottom")
annotate_figure(figure,
top = text_grob("Power and Significance level",
# top = text_grob(expression(paste("Power and Significance level (", bshape^{(0)}, "=", bshape^{(1)}, ")")),
face = "bold", size = 14))
#
windows(height = 14, width = 12)
figure_mod <- ggarrange(p1,p2,p3,p4, ncol=2, nrow=2, common.legend = TRUE, legend="bottom")
annotate_figure(figure_mod,
top = text_grob("Power and Significance level",
face = "bold", size = 14))
rm(list = ls())
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Simulations/results_sim/RESULTS_sim.RData")
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(hrbrthemes)
library(viridis)
data$cases = 4
for(i in 1:dim(data)[1]){
if(data$Delta_r[i]==0 & data$Delta_nr[i]==0) data$cases[i]= 1
if(data$Delta_r[i]==0 & data$Delta_nr[i]!=0) data$cases[i]= 2
if(data$Delta_r[i]!=0 & data$Delta_nr[i]==0) data$cases[i]=3
}
data$cases = as.factor(data$cases)
summary(data$cases)
data$diff_power = data$Test_Reject - data$Test_Reject_LR
data$diff_alpha = data$Test_Reject_size - data$Test_Reject_LR_size
summary(data$os_samplesize)
data = subset(data, data$os_samplesize>100 & data$os_samplesize<5000)
summary(data$os_samplesize)
summary(data$os_effect)
summary(data)
