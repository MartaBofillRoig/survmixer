HR1 = (1/lambda1_r)/(1/lambda1_nr)
list(HR_r=HR_r,HR_nr=HR_nr,HR1=HR1,HR0=HR0)
View(medianw_f)
View(medianw_f)
View(meanw_f)
rm(list = ls())
setwd("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Example")
source('C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Simulations/Functions.R')
library(ggplot2)
################################################################
# Functions
# Weibull parametrization
# S(x) =  exp(- (x/b)^a)
# param_exp: returns the value of b given the survival (s) at time t
param_exp <- function(s,t,a=1){
p = (-log(s))/t
b=1/p
return(b)
}
# The function `survw_samplesize` calculates the sample size according to the distributional parameters of the responders and non-responders, also returns the effect size and the variances in each group.
#
# survw_samplesize <- function(lambda0_r,lambda0_nr,delta_p,p0,beta0,beta1,lambda1_r,lambda1_nr,lambda_cens,tau,alpha=0.025,beta=0.2){
#
#   z_alpha <- qnorm(1-alpha,0,1)
#   z_beta <-  qnorm(1-beta,0,1)
#   p1 = delta_p +  p0
#
#   os_effect = survw_effectsize(lambda0_r,lambda0_nr,delta_p,p0,beta0,beta1,lambda1_r,lambda1_nr,tau)
#
#   var0 <- var_f(lambda_r=lambda0_r,lambda_nr=lambda0_nr,tau=tau,bet=beta0,lambda_cens=lambda_cens,p=p0)
#   var1 <- var_f(lambda_r=lambda1_r,lambda_nr=lambda1_nr,tau=tau,bet=beta1,lambda_cens=lambda_cens,p=p1)
#   ss = ((z_alpha+z_beta)/(os_effect))^2*(var0 + var1)/0.5
#
#   return(list(samplesize=ss,effectsize=os_effect,var0=var0,var1=var1))
# }
################################################################
# From Figure 3: Subgroup analysis for event-free survival
s1_r = 0.87
s0_r = 0.55
s1_nr = 0.38
s0_nr = 0.41
lambda1_r = param_exp(s=s1_r, t=5)
lambda0_r = param_exp(s=s0_r, t=5)
lambda1_nr = param_exp(s=s1_nr, t=5)
lambda0_nr = param_exp(s=s0_nr, t=5)
HR_r =  (1/lambda1_r)/(1/lambda0_r)
HR_nr =  (1/lambda1_nr)/(1/lambda0_nr)
HR0 = (1/lambda0_r)/(1/lambda0_nr)
HR1 = (1/lambda1_r)/(1/lambda1_nr)
list(HR_r=HR_r,HR_nr=HR_nr,HR1=HR1,HR0=HR0)
# Censoring distribution
mean0_nr = meanw_f(lambda=lambda0_nr,bet=1)
lambda_c = 2*mean0_nr
mean_cens = meanw_f(lambda=lambda0_nr,bet=1)
################################################################
# Means
wscale0_r = lambda0_r
wscale1_r = lambda1_r
wscale0_nr = lambda0_nr
wscale1_nr = lambda1_nr
# wscale0_r = 1/lambda0_r
# wscale1_r = 1/lambda1_r
# wscale0_nr = 1/lambda0_nr
# wscale1_nr = 1/lambda1_nr
list(mean0_r=wscale0_r,mean0_nr=wscale0_nr,mean1_r=wscale1_r,mean1_nr=wscale1_nr)
################################################################
# Response pCR
p1=45/117
p0=23/118
p= 68/235
################################################################
# Effects
# rmstw_f(lambda=lambda1_nr_vector[5],bet=1,tau=5)-rmstw_f(lambda=lambda1_nr_vector[5],bet=1,tau=5)
Delta_0 = rmstw_f(lambda=wscale0_r,bet=1,tau=5) - rmstw_f(lambda=wscale0_nr,bet=1,tau=5)
Delta_r = rmstw_f(lambda=wscale1_r,bet=1,tau=5) - rmstw_f(lambda=wscale0_r,bet=1,tau=5)
Delta_nr = rmstw_f(lambda=wscale1_nr,bet=1,tau=5) - rmstw_f(lambda=wscale0_nr,bet=1,tau=5)
delta_p = p1-p0
list(Delta_0=round(Delta_0,2),Delta_r=round(Delta_r,2),Delta_nr=round(Delta_nr,2),delta_p=round(delta_p,2))
################################################################
# sample size NOAH TRIAL
z_alpha <- qnorm(1-0.05,0,1)
z_beta <-  qnorm(1-0.2,0,1)
(n_sch = 4*(z_alpha+z_alpha)^2/(0.5*log(0.545)^2))
(n_sch = 4*(z_alpha+z_alpha)^2/(0.5*log(0.77)^2))
################################################################
# Overall 5-year event-free survival
survmixture_f(t=5,lambda_r=wscale0_r, lambda_nr=wscale0_nr, bet=1, p=p0)
survmixture_f(t=5,lambda_r=wscale1_r, lambda_nr=wscale1_nr, bet=1, p=p1)
################################################################
# Overall 5-year event-free survival
survw_effectsize(lambda0_r=wscale0_r,lambda0_nr=wscale0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=wscale1_r,lambda1_nr=wscale1_nr,tau=1)
survw_effectsize(lambda0_r=wscale0_r,lambda0_nr=wscale0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=wscale1_r,lambda1_nr=wscale1_nr,tau=3)
survw_effectsize(lambda0_r=wscale0_r,lambda0_nr=wscale0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=wscale1_r,lambda1_nr=wscale1_nr,tau=5)
survw_samplesize(lambda0_r=wscale0_r, lambda0_nr=wscale0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=wscale1_r,
lambda1_nr=wscale1_nr, lambda_cens = 1/lambda_c, tau=1, alpha=0.05, beta=0.2)
survw_samplesize(lambda0_r=wscale0_r, lambda0_nr=wscale0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=wscale1_r,
lambda1_nr=wscale1_nr, lambda_cens = 1/lambda_c, tau=3, alpha=0.05, beta=0.2)
survw_samplesize(lambda0_r=wscale0_r, lambda0_nr=wscale0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=wscale1_r,
lambda1_nr=wscale1_nr, lambda_cens = 1/lambda_c, tau=5, alpha=0.05, beta=0.2)
n= survw_samplesize(lambda0_r=wscale0_r, lambda0_nr=wscale0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=wscale1_r,
lambda1_nr=wscale1_nr, lambda_cens = 1/lambda_c, tau=5, alpha=0.05, beta=0.2)
n
survw_samplesize(lambda0_r=wscale0_r, lambda0_nr=wscale0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=wscale1_r,
lambda1_nr=wscale1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
# Censoring distribution
mean0_nr = meanw_f(lambda=lambda0_nr,bet=1)
lambda_c = 2*mean0_nr
mean_cens = meanw_f(lambda=lambda_c,bet=1)
mean_cens
mean0_nr
rm(list = ls())
setwd("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Example")
source('C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Simulations/Functions.R')
library(ggplot2)
################################################################
# Functions
# Weibull parametrization
# S(x) =  exp(- (x/b)^a)
# param_exp: returns the value of b given the survival (s) at time t
param_exp <- function(s,t,a=1){
p = (-log(s))/t
b=1/p
return(b)
}
# The function `survw_samplesize` calculates the sample size according to the distributional parameters of the responders and non-responders, also returns the effect size and the variances in each group.
#
survw_samplesize <- function(lambda0_r,lambda0_nr,delta_p,p0,beta0,beta1,lambda1_r,lambda1_nr,lambda_cens,tau,alpha=0.025,beta=0.2){
z_alpha <- qnorm(1-alpha,0,1)
z_beta <-  qnorm(1-beta,0,1)
p1 = delta_p +  p0
os_effect = survw_effectsize(lambda0_r,lambda0_nr,delta_p,p0,beta0,beta1,lambda1_r,lambda1_nr,tau)
var0 <- var_f(lambda_r=lambda0_r,lambda_nr=lambda0_nr,tau=tau,bet=beta0,lambda_cens=lambda_cens,p=p0)
var1 <- var_f(lambda_r=lambda1_r,lambda_nr=lambda1_nr,tau=tau,bet=beta1,lambda_cens=lambda_cens,p=p1)
ss = ((z_alpha+z_beta)/(os_effect))^2*(var0 + var1)/0.5
return(list(samplesize=ss,effectsize=os_effect,var0=var0,var1=var1))
}
################################################################
# From Figure 3: Subgroup analysis for event-free survival
s1_r = 0.87
s0_r = 0.55
s1_nr = 0.38
s0_nr = 0.41
lambda1_r = param_exp(s=s1_r, t=5)
lambda0_r = param_exp(s=s0_r, t=5)
lambda1_nr = param_exp(s=s1_nr, t=5)
lambda0_nr = param_exp(s=s0_nr, t=5)
HR_r =  (1/lambda1_r)/(1/lambda0_r)
HR_nr =  (1/lambda1_nr)/(1/lambda0_nr)
HR0 = (1/lambda0_r)/(1/lambda0_nr)
HR1 = (1/lambda1_r)/(1/lambda1_nr)
list(HR_r=HR_r,HR_nr=HR_nr,HR1=HR1,HR0=HR0)
# Censoring distribution
mean0_nr = meanw_f(lambda=lambda0_nr,bet=1)
lambda_c = 2*mean0_nr
mean_cens = meanw_f(lambda=lambda_c,bet=1)
wscale0_r = lambda0_r
wscale1_r = lambda1_r
wscale0_nr = lambda0_nr
wscale1_nr = lambda1_nr
# wscale0_r = 1/lambda0_r
# wscale1_r = 1/lambda1_r
# wscale0_nr = 1/lambda0_nr
# wscale1_nr = 1/lambda1_nr
list(mean0_r=wscale0_r,mean0_nr=wscale0_nr,mean1_r=wscale1_r,mean1_nr=wscale1_nr)
# Censoring distribution
mean0_nr = meanw_f(lambda=lambda0_nr,bet=1)
mean0_nr
survw_effectsize(lambda0_r=lambda0_r,lambda0_nr=lambda0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=lambda1_r,lambda1_nr=lambda1_nr,tau=1)
survw_effectsize(lambda0_r=lambda0_r,lambda0_nr=lambda0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=lambda1_r,lambda1_nr=lambda1_nr,tau=3)
survw_effectsize(lambda0_r=lambda0_r,lambda0_nr=lambda0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=lambda1_r,lambda1_nr=lambda1_nr,tau=5)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=1, alpha=0.05, beta=0.2)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=3, alpha=0.05, beta=0.2)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
n= survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
################################################################
# EXAMPLE - MDA Research
# Marta Bofill and Guadalupe GÃ³mez
################################################################
rm(list = ls())
setwd("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Example")
source('C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Simulations/Functions.R')
library(ggplot2)
################################################################
# Functions
# Weibull parametrization
# S(x) =  exp(- (x/b)^a)
# param_exp: returns the value of b given the survival (s) at time t
param_exp <- function(s,t,a=1){
p = (-log(s))/t
b=1/p
return(b)
}
# The function `survw_samplesize` calculates the sample size according to the distributional parameters of the responders and non-responders, also returns the effect size and the variances in each group.
#
survw_samplesize <- function(lambda0_r,lambda0_nr,delta_p,p0,beta0,beta1,lambda1_r,lambda1_nr,lambda_cens,tau,alpha=0.025,beta=0.2){
z_alpha <- qnorm(1-alpha,0,1)
z_beta <-  qnorm(1-beta,0,1)
p1 = delta_p +  p0
os_effect = survw_effectsize(lambda0_r,lambda0_nr,delta_p,p0,beta0,beta1,lambda1_r,lambda1_nr,tau)
var0 <- var_f(lambda_r=lambda0_r,lambda_nr=lambda0_nr,tau=tau,bet=beta0,lambda_cens=lambda_cens,p=p0)
var1 <- var_f(lambda_r=lambda1_r,lambda_nr=lambda1_nr,tau=tau,bet=beta1,lambda_cens=lambda_cens,p=p1)
ss = ((z_alpha+z_beta)/(os_effect))^2*(var0 + var1)/0.5
return(list(samplesize=ss,effectsize=os_effect,var0=var0,var1=var1))
}
################################################################
# From Figure 3: Subgroup analysis for event-free survival
s1_r = 0.87
s0_r = 0.55
s1_nr = 0.38
s0_nr = 0.41
lambda1_r = param_exp(s=s1_r, t=5)
lambda0_r = param_exp(s=s0_r, t=5)
lambda1_nr = param_exp(s=s1_nr, t=5)
lambda0_nr = param_exp(s=s0_nr, t=5)
HR_r =  (1/lambda1_r)/(1/lambda0_r)
HR_nr =  (1/lambda1_nr)/(1/lambda0_nr)
HR0 = (1/lambda0_r)/(1/lambda0_nr)
HR1 = (1/lambda1_r)/(1/lambda1_nr)
list(HR_r=HR_r,HR_nr=HR_nr,HR1=HR1,HR0=HR0)
# Censoring distribution
mean0_nr = meanw_f(lambda=lambda0_nr,bet=1)
lambda_c = 2*mean0_nr
mean_cens = meanw_f(lambda=lambda_c,bet=1)
################################################################
# Means
mean0_nr = meanw_f(lambda=lambda0_nr,bet=1)
mean0_r = meanw_f(lambda=lambda0_r,bet=1)
mean1_nr = meanw_f(lambda=lambda1_nr,bet=1)
mean1_r = meanw_f(lambda=lambda1_r,bet=1)
lambda0_r = lambda0_r
lambda1_r = lambda1_r
lambda0_nr = lambda0_nr
lambda1_nr = lambda1_nr
# lambda0_r = 1/lambda0_r
# lambda1_r = 1/lambda1_r
# lambda0_nr = 1/lambda0_nr
# lambda1_nr = 1/lambda1_nr
list(mean0_r=lambda0_r,mean0_nr=lambda0_nr,mean1_r=lambda1_r,mean1_nr=lambda1_nr)
################################################################
# Response pCR
p1=45/117
p0=23/118
p= 68/235
################################################################
# Effects
# rmstw_f(lambda=lambda1_nr_vector[5],bet=1,tau=5)-rmstw_f(lambda=lambda1_nr_vector[5],bet=1,tau=5)
Delta_0 = rmstw_f(lambda=lambda0_r,bet=1,tau=5) - rmstw_f(lambda=lambda0_nr,bet=1,tau=5)
Delta_r = rmstw_f(lambda=lambda1_r,bet=1,tau=5) - rmstw_f(lambda=lambda0_r,bet=1,tau=5)
Delta_nr = rmstw_f(lambda=lambda1_nr,bet=1,tau=5) - rmstw_f(lambda=lambda0_nr,bet=1,tau=5)
delta_p = p1-p0
list(Delta_0=round(Delta_0,2),Delta_r=round(Delta_r,2),Delta_nr=round(Delta_nr,2),delta_p=round(delta_p,2))
################################################################
# sample size NOAH TRIAL
z_alpha <- qnorm(1-0.05,0,1)
z_beta <-  qnorm(1-0.2,0,1)
(n_sch = 4*(z_alpha+z_alpha)^2/(0.5*log(0.545)^2))
(n_sch = 4*(z_alpha+z_alpha)^2/(0.5*log(0.77)^2))
################################################################
# Overall 5-year event-free survival
survmixture_f(t=5,lambda_r=lambda0_r, lambda_nr=lambda0_nr, bet=1, p=p0)
survmixture_f(t=5,lambda_r=lambda1_r, lambda_nr=lambda1_nr, bet=1, p=p1)
################################################################
# Overall 5-year event-free survival
survw_effectsize(lambda0_r=lambda0_r,lambda0_nr=lambda0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=lambda1_r,lambda1_nr=lambda1_nr,tau=1)
survw_effectsize(lambda0_r=lambda0_r,lambda0_nr=lambda0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=lambda1_r,lambda1_nr=lambda1_nr,tau=3)
survw_effectsize(lambda0_r=lambda0_r,lambda0_nr=lambda0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=lambda1_r,lambda1_nr=lambda1_nr,tau=5)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=1, alpha=0.05, beta=0.2)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=3, alpha=0.05, beta=0.2)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
n= survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
mean0_nr
lambda0_nr
mean0_nr = meanw_f(lambda=lambda0_nr,bet=1)
mean0_r = meanw_f(lambda=lambda0_r,bet=1)
mean1_nr = meanw_f(lambda=lambda1_nr,bet=1)
mean1_r = meanw_f(lambda=lambda1_r,bet=1)
lambda0_r
mean0_r
mean1_nr
lambda1_nr
################################################################
# Censoring distribution
lambda_c = 2*mean0_nr
mean_cens = meanw_f(lambda=lambda_c,bet=1)
lambda_c
mean_cens
mean_cens
################################################################
# EXAMPLE - MDA Research
# Marta Bofill and Guadalupe GÃ³mez
################################################################
rm(list = ls())
setwd("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Example")
source('C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Simulations/Functions.R')
library(ggplot2)
################################################################
# Functions
# Weibull parametrization
# S(x) =  exp(- (x/b)^a)
# param_exp: returns the value of b given the survival (s) at time t
param_exp <- function(s,t,a=1){
p = (-log(s))/t
b=1/p
return(b)
}
# The function `survw_samplesize` calculates the sample size according to the distributional parameters of the responders and non-responders, also returns the effect size and the variances in each group.
#
survw_samplesize <- function(lambda0_r,lambda0_nr,delta_p,p0,beta0,beta1,lambda1_r,lambda1_nr,lambda_cens,tau,alpha=0.025,beta=0.2){
z_alpha <- qnorm(1-alpha,0,1)
z_beta <-  qnorm(1-beta,0,1)
p1 = delta_p +  p0
os_effect = survw_effectsize(lambda0_r,lambda0_nr,delta_p,p0,beta0,beta1,lambda1_r,lambda1_nr,tau)
var0 <- var_f(lambda_r=lambda0_r,lambda_nr=lambda0_nr,tau=tau,bet=beta0,lambda_cens=lambda_cens,p=p0)
var1 <- var_f(lambda_r=lambda1_r,lambda_nr=lambda1_nr,tau=tau,bet=beta1,lambda_cens=lambda_cens,p=p1)
ss = ((z_alpha+z_beta)/(os_effect))^2*(var0 + var1)/0.5
return(list(samplesize=ss,effectsize=os_effect,var0=var0,var1=var1))
}
################################################################
# From Figure 3: Subgroup analysis for event-free survival
s1_r = 0.87
s0_r = 0.55
s1_nr = 0.38
s0_nr = 0.41
lambda1_r = param_exp(s=s1_r, t=5)
lambda0_r = param_exp(s=s0_r, t=5)
lambda1_nr = param_exp(s=s1_nr, t=5)
lambda0_nr = param_exp(s=s0_nr, t=5)
HR_r =  (1/lambda1_r)/(1/lambda0_r)
HR_nr =  (1/lambda1_nr)/(1/lambda0_nr)
HR0 = (1/lambda0_r)/(1/lambda0_nr)
HR1 = (1/lambda1_r)/(1/lambda1_nr)
list(HR_r=HR_r,HR_nr=HR_nr,HR1=HR1,HR0=HR0)
################################################################
# Means
mean0_nr = meanw_f(lambda=lambda0_nr,bet=1)
mean0_r = meanw_f(lambda=lambda0_r,bet=1)
mean1_nr = meanw_f(lambda=lambda1_nr,bet=1)
mean1_r = meanw_f(lambda=lambda1_r,bet=1)
list(mean0_r=lambda0_r,mean0_nr=lambda0_nr,mean1_r=lambda1_r,mean1_nr=lambda1_nr)
################################################################
# Censoring distribution
lambda_c = 2*mean0_nr
mean_cens = meanw_f(lambda=lambda_c,bet=1)
(mean_cens)
Delta_0 = rmstw_f(lambda=lambda0_r,bet=1,tau=5) - rmstw_f(lambda=lambda0_nr,bet=1,tau=5)
Delta_r = rmstw_f(lambda=lambda1_r,bet=1,tau=5) - rmstw_f(lambda=lambda0_r,bet=1,tau=5)
Delta_nr = rmstw_f(lambda=lambda1_nr,bet=1,tau=5) - rmstw_f(lambda=lambda0_nr,bet=1,tau=5)
delta_p = p1-p0
list(Delta_0=round(Delta_0,2),Delta_r=round(Delta_r,2),Delta_nr=round(Delta_nr,2),delta_p=round(delta_p,2))
################################################################
# sample size NOAH TRIAL
z_alpha <- qnorm(1-0.05,0,1)
z_beta <-  qnorm(1-0.2,0,1)
(n_sch = 4*(z_alpha+z_alpha)^2/(0.5*log(0.545)^2))
(n_sch = 4*(z_alpha+z_alpha)^2/(0.5*log(0.77)^2))
################################################################
# Overall 5-year event-free survival
survmixture_f(t=5,lambda_r=lambda0_r, lambda_nr=lambda0_nr, bet=1, p=p0)
survmixture_f(t=5,lambda_r=lambda1_r, lambda_nr=lambda1_nr, bet=1, p=p1)
################################################################
# EXAMPLE - MDA Research
# Marta Bofill and Guadalupe GÃ³mez
################################################################
rm(list = ls())
setwd("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Example")
source('C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/survmixer/code_PAPER/Simulations/Functions.R')
library(ggplot2)
################################################################
# Functions
# Weibull parametrization
# S(x) =  exp(- (x/b)^a)
# param_exp: returns the value of b given the survival (s) at time t
param_exp <- function(s,t,a=1){
p = (-log(s))/t
b=1/p
return(b)
}
# The function `survw_samplesize` calculates the sample size according to the distributional parameters of the responders and non-responders, also returns the effect size and the variances in each group.
#
survw_samplesize <- function(lambda0_r,lambda0_nr,delta_p,p0,beta0,beta1,lambda1_r,lambda1_nr,lambda_cens,tau,alpha=0.025,beta=0.2){
z_alpha <- qnorm(1-alpha,0,1)
z_beta <-  qnorm(1-beta,0,1)
p1 = delta_p +  p0
os_effect = survw_effectsize(lambda0_r,lambda0_nr,delta_p,p0,beta0,beta1,lambda1_r,lambda1_nr,tau)
var0 <- var_f(lambda_r=lambda0_r,lambda_nr=lambda0_nr,tau=tau,bet=beta0,lambda_cens=lambda_cens,p=p0)
var1 <- var_f(lambda_r=lambda1_r,lambda_nr=lambda1_nr,tau=tau,bet=beta1,lambda_cens=lambda_cens,p=p1)
ss = ((z_alpha+z_beta)/(os_effect))^2*(var0 + var1)/0.5
return(list(samplesize=ss,effectsize=os_effect,var0=var0,var1=var1))
}
################################################################
# From Figure 3: Subgroup analysis for event-free survival
s1_r = 0.87
s0_r = 0.55
s1_nr = 0.38
s0_nr = 0.41
lambda1_r = param_exp(s=s1_r, t=5)
lambda0_r = param_exp(s=s0_r, t=5)
lambda1_nr = param_exp(s=s1_nr, t=5)
lambda0_nr = param_exp(s=s0_nr, t=5)
HR_r =  (1/lambda1_r)/(1/lambda0_r)
HR_nr =  (1/lambda1_nr)/(1/lambda0_nr)
HR0 = (1/lambda0_r)/(1/lambda0_nr)
HR1 = (1/lambda1_r)/(1/lambda1_nr)
list(HR_r=HR_r,HR_nr=HR_nr,HR1=HR1,HR0=HR0)
################################################################
# Means
mean0_nr = meanw_f(lambda=lambda0_nr,bet=1)
mean0_r = meanw_f(lambda=lambda0_r,bet=1)
mean1_nr = meanw_f(lambda=lambda1_nr,bet=1)
mean1_r = meanw_f(lambda=lambda1_r,bet=1)
list(mean0_r=lambda0_r,mean0_nr=lambda0_nr,mean1_r=lambda1_r,mean1_nr=lambda1_nr)
################################################################
# Censoring distribution
lambda_c = 2*mean0_nr
mean_cens = meanw_f(lambda=lambda_c,bet=1)
(mean_cens)
################################################################
# Response pCR
p1=45/117
p0=23/118
p= 68/235
################################################################
# Effects
# rmstw_f(lambda=lambda1_nr_vector[5],bet=1,tau=5)-rmstw_f(lambda=lambda1_nr_vector[5],bet=1,tau=5)
Delta_0 = rmstw_f(lambda=lambda0_r,bet=1,tau=5) - rmstw_f(lambda=lambda0_nr,bet=1,tau=5)
Delta_r = rmstw_f(lambda=lambda1_r,bet=1,tau=5) - rmstw_f(lambda=lambda0_r,bet=1,tau=5)
Delta_nr = rmstw_f(lambda=lambda1_nr,bet=1,tau=5) - rmstw_f(lambda=lambda0_nr,bet=1,tau=5)
delta_p = p1-p0
list(Delta_0=round(Delta_0,2),Delta_r=round(Delta_r,2),Delta_nr=round(Delta_nr,2),delta_p=round(delta_p,2))
################################################################
# sample size NOAH TRIAL
z_alpha <- qnorm(1-0.05,0,1)
z_beta <-  qnorm(1-0.2,0,1)
(n_sch = 4*(z_alpha+z_alpha)^2/(0.5*log(0.545)^2))
(n_sch = 4*(z_alpha+z_alpha)^2/(0.5*log(0.77)^2))
################################################################
# Overall 5-year event-free survival
survmixture_f(t=5,lambda_r=lambda0_r, lambda_nr=lambda0_nr, bet=1, p=p0)
survmixture_f(t=5,lambda_r=lambda1_r, lambda_nr=lambda1_nr, bet=1, p=p1)
(mean_cens)
Delta_0 = rmstw_f(lambda=lambda0_r,bet=1,tau=5) - rmstw_f(lambda=lambda0_nr,bet=1,tau=5)
Delta_r = rmstw_f(lambda=lambda1_r,bet=1,tau=5) - rmstw_f(lambda=lambda0_r,bet=1,tau=5)
Delta_nr = rmstw_f(lambda=lambda1_nr,bet=1,tau=5) - rmstw_f(lambda=lambda0_nr,bet=1,tau=5)
delta_p = p1-p0
list(Delta_0=round(Delta_0,2),Delta_r=round(Delta_r,2),Delta_nr=round(Delta_nr,2),delta_p=round(delta_p,2))
################################################################
# sample size NOAH TRIAL
z_alpha <- qnorm(1-0.05,0,1)
z_beta <-  qnorm(1-0.2,0,1)
(n_sch = 4*(z_alpha+z_alpha)^2/(0.5*log(0.545)^2))
(n_sch = 4*(z_alpha+z_alpha)^2/(0.5*log(0.77)^2))
################################################################
# Overall 5-year event-free survival
survmixture_f(t=5,lambda_r=lambda0_r, lambda_nr=lambda0_nr, bet=1, p=p0)
survmixture_f(t=5,lambda_r=lambda1_r, lambda_nr=lambda1_nr, bet=1, p=p1)
survw_effectsize(lambda0_r=lambda0_r,lambda0_nr=lambda0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=lambda1_r,lambda1_nr=lambda1_nr,tau=1)
survw_effectsize(lambda0_r=lambda0_r,lambda0_nr=lambda0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=lambda1_r,lambda1_nr=lambda1_nr,tau=3)
survw_effectsize(lambda0_r=lambda0_r,lambda0_nr=lambda0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=lambda1_r,lambda1_nr=lambda1_nr,tau=5)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=1, alpha=0.05, beta=0.2)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=3, alpha=0.05, beta=0.2)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
n= survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
lambda1_nr
lambda0_nr
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda1_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda1_nr-0.5, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
# original design
survw_effectsize(lambda0_r=lambda0_r,lambda0_nr=lambda0_nr,delta_p=p1-p0,p0=p0,beta0=1,beta1=1,lambda1_r=lambda1_r,lambda1_nr=lambda1_nr,tau=5)
n= survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda0_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
(n)
# case III
rmstw_f(lambda=lambda1_nr,bet=1,tau=5) - rmstw_f(lambda=lambda1_nr,bet=1,tau=5)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda1_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
# case IV
rmstw_f(lambda=lambda1_nr,bet=1,tau=5) - rmstw_f(lambda=lambda1_nr-0.5,bet=1,tau=5)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda1_nr-0.5, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
# case IV
rmstw_f(lambda=lambda1_nr,bet=1,tau=5) - rmstw_f(lambda=lambda1_nr-0.5,bet=1,tau=5)
# case III
rmstw_f(lambda=lambda1_nr,bet=1,tau=5) - rmstw_f(lambda=lambda1_nr,bet=1,tau=5)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda1_nr, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
# case IV
rmstw_f(lambda=lambda1_nr,bet=1,tau=5) - rmstw_f(lambda=lambda1_nr-0.5,bet=1,tau=5)
survw_samplesize(lambda0_r=lambda0_r, lambda0_nr=lambda1_nr-0.5, delta_p=p1-p0, p0=p0, beta0=1, beta1=1, lambda1_r=lambda1_r,
lambda1_nr=lambda1_nr, lambda_cens = lambda_c, tau=5, alpha=0.05, beta=0.2)
0.38-0,19
0.38-0.19
p1
p0
p1-p0
